/*-
 * #%L
 * JSQLParser library
 * %%
 * Copyright (C) 2004 - 2024 JSQLParser
 * %%
 * Dual licensed under GNU LGPL 2.1 or Apache License 2.0
 * #L%
 */
/* Generated By:JJTree&JavaCC: Do not edit this line. CCJSqlParserConstants.java */
package net.sf.jsqlparser.parser;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface CCJSqlParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int WHITESPACE = 1;
  /** RegularExpression Id. */
  int K_ABSENT = 2;
  /** RegularExpression Id. */
  int K_ACTION = 3;
  /** RegularExpression Id. */
  int K_ACTIVE = 4;
  /** RegularExpression Id. */
  int K_ADD = 5;
  /** RegularExpression Id. */
  int K_ADVANCE = 6;
  /** RegularExpression Id. */
  int K_ADVISE = 7;
  /** RegularExpression Id. */
  int K_AGAINST = 8;
  /** RegularExpression Id. */
  int K_ALGORITHM = 9;
  /** RegularExpression Id. */
  int K_ALL = 10;
  /** RegularExpression Id. */
  int K_ALTER = 11;
  /** RegularExpression Id. */
  int K_ANALYZE = 12;
  /** RegularExpression Id. */
  int K_AND = 13;
  /** RegularExpression Id. */
  int K_ANY = 14;
  /** RegularExpression Id. */
  int K_APPLY = 15;
  /** RegularExpression Id. */
  int K_ARCHIVE = 16;
  /** RegularExpression Id. */
  int K_ARRAY_LITERAL = 17;
  /** RegularExpression Id. */
  int K_AS = 18;
  /** RegularExpression Id. */
  int K_AT = 19;
  /** RegularExpression Id. */
  int K_ASC = 20;
  /** RegularExpression Id. */
  int K_AUTHORIZATION = 21;
  /** RegularExpression Id. */
  int K_AUTO = 22;
  /** RegularExpression Id. */
  int K_BASE64 = 23;
  /** RegularExpression Id. */
  int K_BEGIN = 24;
  /** RegularExpression Id. */
  int K_BERNOULLI = 25;
  /** RegularExpression Id. */
  int K_BETWEEN = 26;
  /** RegularExpression Id. */
  int K_BINARY = 27;
  /** RegularExpression Id. */
  int K_BIT = 28;
  /** RegularExpression Id. */
  int K_BLOCK = 29;
  /** RegularExpression Id. */
  int K_BOTH = 30;
  /** RegularExpression Id. */
  int K_BROWSE = 31;
  /** RegularExpression Id. */
  int K_BY = 32;
  /** RegularExpression Id. */
  int K_BYTES = 33;
  /** RegularExpression Id. */
  int K_CACHE = 34;
  /** RegularExpression Id. */
  int K_BUFFERS = 35;
  /** RegularExpression Id. */
  int K_BYTE = 36;
  /** RegularExpression Id. */
  int K_CALL = 37;
  /** RegularExpression Id. */
  int K_CASCADE = 38;
  /** RegularExpression Id. */
  int K_CASE = 39;
  /** RegularExpression Id. */
  int K_CASEWHEN = 40;
  /** RegularExpression Id. */
  int K_CAST = 41;
  /** RegularExpression Id. */
  int K_CHARACTER = 42;
  /** RegularExpression Id. */
  int K_CHANGE = 43;
  /** RegularExpression Id. */
  int K_CHANGES = 44;
  /** RegularExpression Id. */
  int K_CHECK = 45;
  /** RegularExpression Id. */
  int K_CHECKPOINT = 46;
  /** RegularExpression Id. */
  int K_CHAR = 47;
  /** RegularExpression Id. */
  int K_CLOSE = 48;
  /** RegularExpression Id. */
  int K_COLLATE = 49;
  /** RegularExpression Id. */
  int K_COLUMN = 50;
  /** RegularExpression Id. */
  int K_COLUMNS = 51;
  /** RegularExpression Id. */
  int K_COMMA = 52;
  /** RegularExpression Id. */
  int K_COMMIT = 53;
  /** RegularExpression Id. */
  int K_COMMENT = 54;
  /** RegularExpression Id. */
  int K_CONFLICT = 55;
  /** RegularExpression Id. */
  int K_CONNECT = 56;
  /** RegularExpression Id. */
  int K_CONNECT_BY_ROOT = 57;
  /** RegularExpression Id. */
  int K_CONSTRAINT = 58;
  /** RegularExpression Id. */
  int K_CONSTRAINTS = 59;
  /** RegularExpression Id. */
  int K_CONVERT = 60;
  /** RegularExpression Id. */
  int K_COSTS = 61;
  /** RegularExpression Id. */
  int K_CREATE = 62;
  /** RegularExpression Id. */
  int K_CROSS = 63;
  /** RegularExpression Id. */
  int K_CURRENT = 64;
  /** RegularExpression Id. */
  int K_CYCLE = 65;
  /** RegularExpression Id. */
  int K_DATABASE = 66;
  /** RegularExpression Id. */
  int K_DATA = 67;
  /** RegularExpression Id. */
  int K_DECLARE = 68;
  /** RegularExpression Id. */
  int K_DATETIMELITERAL = 69;
  /** RegularExpression Id. */
  int K_DATE_LITERAL = 70;
  /** RegularExpression Id. */
  int K_DBA_RECYCLEBIN = 71;
  /** RegularExpression Id. */
  int K_DEFAULT = 72;
  /** RegularExpression Id. */
  int K_DEFERRABLE = 73;
  /** RegularExpression Id. */
  int K_DELAYED = 74;
  /** RegularExpression Id. */
  int K_DELETE = 75;
  /** RegularExpression Id. */
  int K_DESC = 76;
  /** RegularExpression Id. */
  int K_DESCRIBE = 77;
  /** RegularExpression Id. */
  int K_DISABLE = 78;
  /** RegularExpression Id. */
  int K_DISCONNECT = 79;
  /** RegularExpression Id. */
  int K_DISTINCT = 80;
  /** RegularExpression Id. */
  int K_DIV = 81;
  /** RegularExpression Id. */
  int K_DDL = 82;
  /** RegularExpression Id. */
  int K_DML = 83;
  /** RegularExpression Id. */
  int K_DO = 84;
  /** RegularExpression Id. */
  int K_DOMAIN = 85;
  /** RegularExpression Id. */
  int K_DOUBLE = 86;
  /** RegularExpression Id. */
  int K_DROP = 87;
  /** RegularExpression Id. */
  int K_DUMP = 88;
  /** RegularExpression Id. */
  int K_DUPLICATE = 89;
  /** RegularExpression Id. */
  int K_ELEMENTS = 90;
  /** RegularExpression Id. */
  int K_ELSE = 91;
  /** RegularExpression Id. */
  int K_EMIT = 92;
  /** RegularExpression Id. */
  int K_ENABLE = 93;
  /** RegularExpression Id. */
  int K_END = 94;
  /** RegularExpression Id. */
  int K_ESCAPE = 95;
  /** RegularExpression Id. */
  int K_EXCEPT = 96;
  /** RegularExpression Id. */
  int K_EXCLUDE = 97;
  /** RegularExpression Id. */
  int K_EXEC = 98;
  /** RegularExpression Id. */
  int K_EXECUTE = 99;
  /** RegularExpression Id. */
  int K_EXISTS = 100;
  /** RegularExpression Id. */
  int K_EXPLAIN = 101;
  /** RegularExpression Id. */
  int K_EXPLICIT = 102;
  /** RegularExpression Id. */
  int K_EXTENDED = 103;
  /** RegularExpression Id. */
  int K_EXTRACT = 104;
  /** RegularExpression Id. */
  int K_FETCH = 105;
  /** RegularExpression Id. */
  int K_ISOLATION = 106;
  /** RegularExpression Id. */
  int K_FILTER = 107;
  /** RegularExpression Id. */
  int K_FINAL = 108;
  /** RegularExpression Id. */
  int K_FIRST = 109;
  /** RegularExpression Id. */
  int K_FALSE = 110;
  /** RegularExpression Id. */
  int K_FLUSH = 111;
  /** RegularExpression Id. */
  int K_FOLLOWING = 112;
  /** RegularExpression Id. */
  int K_FOR = 113;
  /** RegularExpression Id. */
  int K_FORCE = 114;
  /** RegularExpression Id. */
  int K_FOREIGN = 115;
  /** RegularExpression Id. */
  int K_FORMAT = 116;
  /** RegularExpression Id. */
  int K_FROM = 117;
  /** RegularExpression Id. */
  int K_FULL = 118;
  /** RegularExpression Id. */
  int K_FULLTEXT = 119;
  /** RegularExpression Id. */
  int K_FUNCTION = 120;
  /** RegularExpression Id. */
  int K_GLOBAL = 121;
  /** RegularExpression Id. */
  int K_GRANT = 122;
  /** RegularExpression Id. */
  int K_GROUP = 123;
  /** RegularExpression Id. */
  int K_GROUPING = 124;
  /** RegularExpression Id. */
  int K_GROUP_CONCAT = 125;
  /** RegularExpression Id. */
  int K_GUARD = 126;
  /** RegularExpression Id. */
  int K_HAVING = 127;
  /** RegularExpression Id. */
  int K_HASH = 128;
  /** RegularExpression Id. */
  int K_HIGH_PRIORITY = 129;
  /** RegularExpression Id. */
  int K_HISTORY = 130;
  /** RegularExpression Id. */
  int K_HOPPING = 131;
  /** RegularExpression Id. */
  int K_IF = 132;
  /** RegularExpression Id. */
  int K_IIF = 133;
  /** RegularExpression Id. */
  int K_IGNORE = 134;
  /** RegularExpression Id. */
  int K_ILIKE = 135;
  /** RegularExpression Id. */
  int K_IN = 136;
  /** RegularExpression Id. */
  int K_INCLUDE = 137;
  /** RegularExpression Id. */
  int K_INCLUDE_NULL_VALUES = 138;
  /** RegularExpression Id. */
  int K_INCREMENT = 139;
  /** RegularExpression Id. */
  int K_INDEX = 140;
  /** RegularExpression Id. */
  int K_INNER = 141;
  /** RegularExpression Id. */
  int K_STRAIGHT = 142;
  /** RegularExpression Id. */
  int K_INSERT = 143;
  /** RegularExpression Id. */
  int K_INTERLEAVE = 144;
  /** RegularExpression Id. */
  int K_INTERPRET = 145;
  /** RegularExpression Id. */
  int K_INTERSECT = 146;
  /** RegularExpression Id. */
  int K_INTERVAL = 147;
  /** RegularExpression Id. */
  int K_INTO = 148;
  /** RegularExpression Id. */
  int K_INVALIDATE = 149;
  /** RegularExpression Id. */
  int K_IS = 150;
  /** RegularExpression Id. */
  int K_ISNULL = 151;
  /** RegularExpression Id. */
  int K_JOIN = 152;
  /** RegularExpression Id. */
  int K_JSON = 153;
  /** RegularExpression Id. */
  int K_JSON_OBJECT = 154;
  /** RegularExpression Id. */
  int K_JSON_OBJECTAGG = 155;
  /** RegularExpression Id. */
  int K_JSON_ARRAY = 156;
  /** RegularExpression Id. */
  int K_JSON_ARRAYAGG = 157;
  /** RegularExpression Id. */
  int K_KEEP = 158;
  /** RegularExpression Id. */
  int K_KEY = 159;
  /** RegularExpression Id. */
  int K_KEYS = 160;
  /** RegularExpression Id. */
  int K_FN = 161;
  /** RegularExpression Id. */
  int K_LAST = 162;
  /** RegularExpression Id. */
  int K_LATERAL = 163;
  /** RegularExpression Id. */
  int K_LEADING = 164;
  /** RegularExpression Id. */
  int K_LEFT = 165;
  /** RegularExpression Id. */
  int K_LIKE = 166;
  /** RegularExpression Id. */
  int K_LIMIT = 167;
  /** RegularExpression Id. */
  int K_LOCAL = 168;
  /** RegularExpression Id. */
  int K_LOCKED = 169;
  /** RegularExpression Id. */
  int K_LINK = 170;
  /** RegularExpression Id. */
  int K_LOG = 171;
  /** RegularExpression Id. */
  int K_LOOP = 172;
  /** RegularExpression Id. */
  int K_LOW_PRIORITY = 173;
  /** RegularExpression Id. */
  int K_MATCH = 174;
  /** RegularExpression Id. */
  int K_MATCHED = 175;
  /** RegularExpression Id. */
  int K_MATERIALIZED = 176;
  /** RegularExpression Id. */
  int K_MAXVALUE = 177;
  /** RegularExpression Id. */
  int K_MEMBER = 178;
  /** RegularExpression Id. */
  int K_MERGE = 179;
  /** RegularExpression Id. */
  int K_MINUS = 180;
  /** RegularExpression Id. */
  int K_MINVALUE = 181;
  /** RegularExpression Id. */
  int K_MODIFY = 182;
  /** RegularExpression Id. */
  int K_MOVEMENT = 183;
  /** RegularExpression Id. */
  int K_NATURAL = 184;
  /** RegularExpression Id. */
  int K_NEXT = 185;
  /** RegularExpression Id. */
  int K_NEXTVAL = 186;
  /** RegularExpression Id. */
  int K_NO = 187;
  /** RegularExpression Id. */
  int K_NOCACHE = 188;
  /** RegularExpression Id. */
  int K_NOCYCLE = 189;
  /** RegularExpression Id. */
  int K_NOKEEP = 190;
  /** RegularExpression Id. */
  int K_NOLOCK = 191;
  /** RegularExpression Id. */
  int K_NOMAXVALUE = 192;
  /** RegularExpression Id. */
  int K_NOMINVALUE = 193;
  /** RegularExpression Id. */
  int K_NOORDER = 194;
  /** RegularExpression Id. */
  int K_NOT = 195;
  /** RegularExpression Id. */
  int K_NOTHING = 196;
  /** RegularExpression Id. */
  int K_NOTNULL = 197;
  /** RegularExpression Id. */
  int K_NOVALIDATE = 198;
  /** RegularExpression Id. */
  int K_NULL = 199;
  /** RegularExpression Id. */
  int K_NULLS = 200;
  /** RegularExpression Id. */
  int K_NOWAIT = 201;
  /** RegularExpression Id. */
  int K_OF = 202;
  /** RegularExpression Id. */
  int K_OFF = 203;
  /** RegularExpression Id. */
  int K_OFFSET = 204;
  /** RegularExpression Id. */
  int K_ON = 205;
  /** RegularExpression Id. */
  int K_ONLY = 206;
  /** RegularExpression Id. */
  int K_OPEN = 207;
  /** RegularExpression Id. */
  int K_OR = 208;
  /** RegularExpression Id. */
  int K_ORACLE_NAMED_PARAMETER_ASSIGNMENT = 209;
  /** RegularExpression Id. */
  int K_ORDER = 210;
  /** RegularExpression Id. */
  int K_OUTER = 211;
  /** RegularExpression Id. */
  int K_OUTPUT = 212;
  /** RegularExpression Id. */
  int K_OVER = 213;
  /** RegularExpression Id. */
  int K_OVERLAPS = 214;
  /** RegularExpression Id. */
  int K_OPTIMIZE = 215;
  /** RegularExpression Id. */
  int K_PARALLEL = 216;
  /** RegularExpression Id. */
  int K_PARENT = 217;
  /** RegularExpression Id. */
  int K_PARTITION = 218;
  /** RegularExpression Id. */
  int K_PATH = 219;
  /** RegularExpression Id. */
  int K_PERCENT = 220;
  /** RegularExpression Id. */
  int K_PIVOT = 221;
  /** RegularExpression Id. */
  int K_PLACING = 222;
  /** RegularExpression Id. */
  int K_PRECEDING = 223;
  /** RegularExpression Id. */
  int K_PRECISION = 224;
  /** RegularExpression Id. */
  int K_PRIMARY = 225;
  /** RegularExpression Id. */
  int K_PRIOR = 226;
  /** RegularExpression Id. */
  int K_PROCEDURE = 227;
  /** RegularExpression Id. */
  int K_PUBLIC = 228;
  /** RegularExpression Id. */
  int K_PURGE = 229;
  /** RegularExpression Id. */
  int K_QUALIFY = 230;
  /** RegularExpression Id. */
  int K_QUERY = 231;
  /** RegularExpression Id. */
  int K_QUICK = 232;
  /** RegularExpression Id. */
  int K_QUIESCE = 233;
  /** RegularExpression Id. */
  int K_RANGE = 234;
  /** RegularExpression Id. */
  int K_RAW = 235;
  /** RegularExpression Id. */
  int K_READ = 236;
  /** RegularExpression Id. */
  int K_RECYCLEBIN = 237;
  /** RegularExpression Id. */
  int K_RECURSIVE = 238;
  /** RegularExpression Id. */
  int K_REFERENCES = 239;
  /** RegularExpression Id. */
  int K_REFRESH = 240;
  /** RegularExpression Id. */
  int K_REGEXP = 241;
  /** RegularExpression Id. */
  int K_RLIKE = 242;
  /** RegularExpression Id. */
  int K_REGISTER = 243;
  /** RegularExpression Id. */
  int K_REMOTE = 244;
  /** RegularExpression Id. */
  int K_RENAME = 245;
  /** RegularExpression Id. */
  int K_REPEATABLE = 246;
  /** RegularExpression Id. */
  int K_REPLACE = 247;
  /** RegularExpression Id. */
  int K_RESET = 248;
  /** RegularExpression Id. */
  int K_RESTART = 249;
  /** RegularExpression Id. */
  int K_RESUMABLE = 250;
  /** RegularExpression Id. */
  int K_RESUME = 251;
  /** RegularExpression Id. */
  int K_RESTRICT = 252;
  /** RegularExpression Id. */
  int K_RESTRICTED = 253;
  /** RegularExpression Id. */
  int K_RETURN = 254;
  /** RegularExpression Id. */
  int K_RETURNING = 255;
  /** RegularExpression Id. */
  int K_RIGHT = 256;
  /** RegularExpression Id. */
  int K_ROLLBACK = 257;
  /** RegularExpression Id. */
  int K_ROLLUP = 258;
  /** RegularExpression Id. */
  int K_ROOT = 259;
  /** RegularExpression Id. */
  int K_ROW = 260;
  /** RegularExpression Id. */
  int K_ROWS = 261;
  /** RegularExpression Id. */
  int K_SAFE_CAST = 262;
  /** RegularExpression Id. */
  int K_SAMPLE = 263;
  /** RegularExpression Id. */
  int K_SAVEPOINT = 264;
  /** RegularExpression Id. */
  int K_SCHEMA = 265;
  /** RegularExpression Id. */
  int K_SEED = 266;
  /** RegularExpression Id. */
  int K_SELECT = 267;
  /** RegularExpression Id. */
  int K_SEMI = 268;
  /** RegularExpression Id. */
  int K_SEQUENCE = 269;
  /** RegularExpression Id. */
  int K_SEPARATOR = 270;
  /** RegularExpression Id. */
  int K_SESSION = 271;
  /** RegularExpression Id. */
  int K_SET = 272;
  /** RegularExpression Id. */
  int K_SETS = 273;
  /** RegularExpression Id. */
  int K_SHOW = 274;
  /** RegularExpression Id. */
  int K_SHUTDOWN = 275;
  /** RegularExpression Id. */
  int K_SHARE = 276;
  /** RegularExpression Id. */
  int K_SIBLINGS = 277;
  /** RegularExpression Id. */
  int K_SIMILAR = 278;
  /** RegularExpression Id. */
  int K_SIZE = 279;
  /** RegularExpression Id. */
  int K_SKIP = 280;
  /** RegularExpression Id. */
  int K_SOME = 281;
  /** RegularExpression Id. */
  int K_START = 282;
  /** RegularExpression Id. */
  int K_STORED = 283;
  /** RegularExpression Id. */
  int K_STRING = 284;
  /** RegularExpression Id. */
  int K_SUSPEND = 285;
  /** RegularExpression Id. */
  int K_SWITCH = 286;
  /** RegularExpression Id. */
  int K_SYNONYM = 287;
  /** RegularExpression Id. */
  int K_SYSTEM = 288;
  /** RegularExpression Id. */
  int K_TABLE = 289;
  /** RegularExpression Id. */
  int K_TABLES = 290;
  /** RegularExpression Id. */
  int K_TABLESAMPLE = 291;
  /** RegularExpression Id. */
  int K_TABLESPACE = 292;
  /** RegularExpression Id. */
  int K_TRIGGER = 293;
  /** RegularExpression Id. */
  int K_THEN = 294;
  /** RegularExpression Id. */
  int K_TEMP = 295;
  /** RegularExpression Id. */
  int K_TEMPORARY = 296;
  /** RegularExpression Id. */
  int K_TIME_KEY_EXPR = 297;
  /** RegularExpression Id. */
  int K_TIMEOUT = 298;
  /** RegularExpression Id. */
  int K_TRIM = 299;
  /** RegularExpression Id. */
  int K_TO = 300;
  /** RegularExpression Id. */
  int K_TOP = 301;
  /** RegularExpression Id. */
  int K_TRAILING = 302;
  /** RegularExpression Id. */
  int K_TRUNCATE = 303;
  /** RegularExpression Id. */
  int K_TRUE = 304;
  /** RegularExpression Id. */
  int K_TRY_CAST = 305;
  /** RegularExpression Id. */
  int K_TUMBLING = 306;
  /** RegularExpression Id. */
  int K_TYPE = 307;
  /** RegularExpression Id. */
  int K_UNBOUNDED = 308;
  /** RegularExpression Id. */
  int K_UNION = 309;
  /** RegularExpression Id. */
  int K_UNIQUE = 310;
  /** RegularExpression Id. */
  int K_UNLOGGED = 311;
  /** RegularExpression Id. */
  int K_UNPIVOT = 312;
  /** RegularExpression Id. */
  int K_UPDATE = 313;
  /** RegularExpression Id. */
  int K_UPSERT = 314;
  /** RegularExpression Id. */
  int K_UNQIESCE = 315;
  /** RegularExpression Id. */
  int K_USE = 316;
  /** RegularExpression Id. */
  int K_USER = 317;
  /** RegularExpression Id. */
  int K_SQL_CALC_FOUND_ROWS = 318;
  /** RegularExpression Id. */
  int K_SQL_NO_CACHE = 319;
  /** RegularExpression Id. */
  int K_SQL_CACHE = 320;
  /** RegularExpression Id. */
  int K_USING = 321;
  /** RegularExpression Id. */
  int K_SIGNED = 322;
  /** RegularExpression Id. */
  int K_STRING_FUNCTION_NAME = 323;
  /** RegularExpression Id. */
  int K_UNSIGNED = 324;
  /** RegularExpression Id. */
  int K_VALIDATE = 325;
  /** RegularExpression Id. */
  int K_VALUE = 326;
  /** RegularExpression Id. */
  int K_VALUES = 327;
  /** RegularExpression Id. */
  int K_VARYING = 328;
  /** RegularExpression Id. */
  int K_VERBOSE = 329;
  /** RegularExpression Id. */
  int K_VIEW = 330;
  /** RegularExpression Id. */
  int K_CONCURRENTLY = 331;
  /** RegularExpression Id. */
  int K_WAIT = 332;
  /** RegularExpression Id. */
  int K_WHEN = 333;
  /** RegularExpression Id. */
  int K_WHERE = 334;
  /** RegularExpression Id. */
  int K_WINDOW = 335;
  /** RegularExpression Id. */
  int K_WITH = 336;
  /** RegularExpression Id. */
  int K_WITH_TIES = 337;
  /** RegularExpression Id. */
  int K_WITHIN = 338;
  /** RegularExpression Id. */
  int K_WITHOUT = 339;
  /** RegularExpression Id. */
  int K_WITHOUT_ARRAY_WRAPPER = 340;
  /** RegularExpression Id. */
  int K_WORK = 341;
  /** RegularExpression Id. */
  int K_XML = 342;
  /** RegularExpression Id. */
  int K_XOR = 343;
  /** RegularExpression Id. */
  int K_XMLSERIALIZE = 344;
  /** RegularExpression Id. */
  int K_XMLAGG = 345;
  /** RegularExpression Id. */
  int K_XMLDATA = 346;
  /** RegularExpression Id. */
  int K_XMLSCHEMA = 347;
  /** RegularExpression Id. */
  int K_XMLTEXT = 348;
  /** RegularExpression Id. */
  int K_XSINIL = 349;
  /** RegularExpression Id. */
  int K_YAML = 350;
  /** RegularExpression Id. */
  int K_YES = 351;
  /** RegularExpression Id. */
  int K_ZONE = 352;
  /** RegularExpression Id. */
  int ST_SEMICOLON = 353;
  /** RegularExpression Id. */
  int OP_GREATERTHANEQUALS = 354;
  /** RegularExpression Id. */
  int OP_MINORTHANEQUALS = 355;
  /** RegularExpression Id. */
  int OP_NOTEQUALSSTANDARD = 356;
  /** RegularExpression Id. */
  int OP_NOTEQUALSBANG = 357;
  /** RegularExpression Id. */
  int OP_CONCAT = 358;
  /** RegularExpression Id. */
  int OP_DOUBLEAND = 359;
  /** RegularExpression Id. */
  int OP_CONTAINS = 360;
  /** RegularExpression Id. */
  int OP_CONTAINEDBY = 361;
  /** RegularExpression Id. */
  int DT_ZONE = 362;
  /** RegularExpression Id. */
  int S_DOUBLE = 363;
  /** RegularExpression Id. */
  int S_LONG = 364;
  /** RegularExpression Id. */
  int DIGIT = 365;
  /** RegularExpression Id. */
  int S_HEX = 366;
  /** RegularExpression Id. */
  int HEX_VALUE = 367;
  /** RegularExpression Id. */
  int LINE_COMMENT = 368;
  /** RegularExpression Id. */
  int MULTI_LINE_COMMENT = 369;
  /** RegularExpression Id. */
  int S_IDENTIFIER = 370;
  /** RegularExpression Id. */
  int LETTER = 371;
  /** RegularExpression Id. */
  int PART_LETTER = 372;
  /** RegularExpression Id. */
  int UnicodeIdentifierStart = 373;
  /** RegularExpression Id. */
  int Ll = 374;
  /** RegularExpression Id. */
  int Lm = 375;
  /** RegularExpression Id. */
  int Lo = 376;
  /** RegularExpression Id. */
  int Lt = 377;
  /** RegularExpression Id. */
  int Lu = 378;
  /** RegularExpression Id. */
  int Nl = 379;
  /** RegularExpression Id. */
  int UnicodeIdentifierExtend = 380;
  /** RegularExpression Id. */
  int Cf = 381;
  /** RegularExpression Id. */
  int Mc = 382;
  /** RegularExpression Id. */
  int Mn = 383;
  /** RegularExpression Id. */
  int Nd = 384;
  /** RegularExpression Id. */
  int Pc = 385;
  /** RegularExpression Id. */
  int CJK = 386;
  /** RegularExpression Id. */
  int SPECIAL_ESC = 387;
  /** RegularExpression Id. */
  int ESC = 388;
  /** RegularExpression Id. */
  int S_CHAR_LITERAL = 389;
  /** RegularExpression Id. */
  int S_QUOTED_IDENTIFIER = 390;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "<WHITESPACE>",
    "\"ABSENT\"",
    "\"ACTION\"",
    "\"ACTIVE\"",
    "\"ADD\"",
    "\"ADVANCE\"",
    "\"ADVISE\"",
    "\"AGAINST\"",
    "\"ALGORITHM\"",
    "\"ALL\"",
    "\"ALTER\"",
    "\"ANALYZE\"",
    "\"AND\"",
    "\"ANY\"",
    "\"APPLY\"",
    "\"ARCHIVE\"",
    "\"ARRAY\"",
    "\"AS\"",
    "\"AT\"",
    "\"ASC\"",
    "\"AUTHORIZATION\"",
    "\"AUTO\"",
    "\"BASE64\"",
    "\"BEGIN\"",
    "\"BERNOULLI\"",
    "\"BETWEEN\"",
    "\"BINARY\"",
    "\"BIT\"",
    "\"BLOCK\"",
    "\"BOTH\"",
    "\"BROWSE\"",
    "\"BY\"",
    "\"BYTES\"",
    "\"CACHE\"",
    "\"BUFFERS\"",
    "\"BYTE\"",
    "\"CALL\"",
    "\"CASCADE\"",
    "\"CASE\"",
    "\"CASEWHEN\"",
    "\"CAST\"",
    "\"CHARACTER\"",
    "\"CHANGE\"",
    "\"CHANGES\"",
    "\"CHECK\"",
    "\"CHECKPOINT\"",
    "\"CHAR\"",
    "\"CLOSE\"",
    "\"COLLATE\"",
    "\"COLUMN\"",
    "\"COLUMNS\"",
    "\",\"",
    "\"COMMIT\"",
    "\"COMMENT\"",
    "\"CONFLICT\"",
    "\"CONNECT\"",
    "\"CONNECT_BY_ROOT\"",
    "\"CONSTRAINT\"",
    "\"CONSTRAINTS\"",
    "\"CONVERT\"",
    "\"COSTS\"",
    "\"CREATE\"",
    "\"CROSS\"",
    "\"CURRENT\"",
    "\"CYCLE\"",
    "\"DATABASE\"",
    "\"DATA\"",
    "\"DECLARE\"",
    "<K_DATETIMELITERAL>",
    "<K_DATE_LITERAL>",
    "\"DBA_RECYCLEBIN\"",
    "\"DEFAULT\"",
    "\"DEFERRABLE\"",
    "\"DELAYED\"",
    "\"DELETE\"",
    "\"DESC\"",
    "\"DESCRIBE\"",
    "\"DISABLE\"",
    "\"DISCONNECT\"",
    "\"DISTINCT\"",
    "\"DIV\"",
    "\"DDL\"",
    "\"DML\"",
    "\"DO\"",
    "\"DOMAIN\"",
    "\"DOUBLE\"",
    "\"DROP\"",
    "\"DUMP\"",
    "\"DUPLICATE\"",
    "\"ELEMENTS\"",
    "\"ELSE\"",
    "\"EMIT\"",
    "\"ENABLE\"",
    "\"END\"",
    "\"ESCAPE\"",
    "\"EXCEPT\"",
    "\"EXCLUDE\"",
    "\"EXEC\"",
    "\"EXECUTE\"",
    "\"EXISTS\"",
    "\"EXPLAIN\"",
    "\"EXPLICIT\"",
    "\"EXTENDED\"",
    "\"EXTRACT\"",
    "\"FETCH\"",
    "<K_ISOLATION>",
    "\"FILTER\"",
    "\"FINAL\"",
    "\"FIRST\"",
    "\"FALSE\"",
    "\"FLUSH\"",
    "\"FOLLOWING\"",
    "\"FOR\"",
    "\"FORCE\"",
    "\"FOREIGN\"",
    "\"FORMAT\"",
    "\"FROM\"",
    "\"FULL\"",
    "\"FULLTEXT\"",
    "\"FUNCTION\"",
    "\"GLOBAL\"",
    "\"GRANT\"",
    "\"GROUP\"",
    "\"GROUPING\"",
    "\"GROUP_CONCAT\"",
    "\"GUARD\"",
    "\"HAVING\"",
    "\"HASH\"",
    "\"HIGH_PRIORITY\"",
    "\"HISTORY\"",
    "\"HOPPING\"",
    "\"IF\"",
    "\"IIF\"",
    "\"IGNORE\"",
    "\"ILIKE\"",
    "\"IN\"",
    "\"INCLUDE\"",
    "\"INCLUDE_NULL_VALUES\"",
    "\"INCREMENT\"",
    "\"INDEX\"",
    "\"INNER\"",
    "\"STRAIGHT_JOIN\"",
    "\"INSERT\"",
    "\"INTERLEAVE\"",
    "\"INTERPRET\"",
    "\"INTERSECT\"",
    "\"INTERVAL\"",
    "\"INTO\"",
    "\"INVALIDATE\"",
    "\"IS\"",
    "\"ISNULL\"",
    "\"JOIN\"",
    "\"JSON\"",
    "\"JSON_OBJECT\"",
    "\"JSON_OBJECTAGG\"",
    "\"JSON_ARRAY\"",
    "\"JSON_ARRAYAGG\"",
    "\"KEEP\"",
    "\"KEY\"",
    "\"KEYS\"",
    "\"FN\"",
    "\"LAST\"",
    "\"LATERAL\"",
    "\"LEADING\"",
    "\"LEFT\"",
    "\"LIKE\"",
    "\"LIMIT\"",
    "\"LOCAL\"",
    "\"LOCKED\"",
    "\"LINK\"",
    "\"LOG\"",
    "\"LOOP\"",
    "\"LOW_PRIORITY\"",
    "\"MATCH\"",
    "\"MATCHED\"",
    "\"MATERIALIZED\"",
    "\"MAXVALUE\"",
    "\"MEMBER\"",
    "\"MERGE\"",
    "\"MINUS\"",
    "\"MINVALUE\"",
    "\"MODIFY\"",
    "\"MOVEMENT\"",
    "\"NATURAL\"",
    "\"NEXT\"",
    "<K_NEXTVAL>",
    "\"NO\"",
    "\"NOCACHE\"",
    "\"NOCYCLE\"",
    "\"NOKEEP\"",
    "\"NOLOCK\"",
    "\"NOMAXVALUE\"",
    "\"NOMINVALUE\"",
    "\"NOORDER\"",
    "\"NOT\"",
    "\"NOTHING\"",
    "\"NOTNULL\"",
    "\"NOVALIDATE\"",
    "\"NULL\"",
    "\"NULLS\"",
    "\"NOWAIT\"",
    "\"OF\"",
    "\"OFF\"",
    "\"OFFSET\"",
    "\"ON\"",
    "\"ONLY\"",
    "\"OPEN\"",
    "\"OR\"",
    "\"=>\"",
    "\"ORDER\"",
    "\"OUTER\"",
    "\"OUTPUT\"",
    "\"OVER\"",
    "\"OVERLAPS\"",
    "\"OPTIMIZE\"",
    "\"PARALLEL\"",
    "\"PARENT\"",
    "\"PARTITION\"",
    "\"PATH\"",
    "\"PERCENT\"",
    "\"PIVOT\"",
    "\"PLACING\"",
    "\"PRECEDING\"",
    "\"PRECISION\"",
    "\"PRIMARY\"",
    "\"PRIOR\"",
    "\"PROCEDURE\"",
    "\"PUBLIC\"",
    "\"PURGE\"",
    "\"QUALIFY\"",
    "\"QUERY\"",
    "\"QUICK\"",
    "\"QUIESCE\"",
    "\"RANGE\"",
    "\"RAW\"",
    "\"READ\"",
    "\"RECYCLEBIN\"",
    "\"RECURSIVE\"",
    "\"REFERENCES\"",
    "\"REFRESH\"",
    "\"REGEXP\"",
    "\"RLIKE\"",
    "\"REGISTER\"",
    "\"REMOTE\"",
    "\"RENAME\"",
    "\"REPEATABLE\"",
    "\"REPLACE\"",
    "\"RESET\"",
    "\"RESTART\"",
    "\"RESUMABLE\"",
    "\"RESUME\"",
    "\"RESTRICT\"",
    "\"RESTRICTED\"",
    "\"RETURN\"",
    "\"RETURNING\"",
    "\"RIGHT\"",
    "\"ROLLBACK\"",
    "\"ROLLUP\"",
    "\"ROOT\"",
    "\"ROW\"",
    "\"ROWS\"",
    "\"SAFE_CAST\"",
    "\"SAMPLE\"",
    "\"SAVEPOINT\"",
    "\"SCHEMA\"",
    "\"SEED\"",
    "<K_SELECT>",
    "\"SEMI\"",
    "\"SEQUENCE\"",
    "\"SEPARATOR\"",
    "\"SESSION\"",
    "\"SET\"",
    "\"SETS\"",
    "\"SHOW\"",
    "\"SHUTDOWN\"",
    "\"SHARE\"",
    "\"SIBLINGS\"",
    "\"SIMILAR\"",
    "\"SIZE\"",
    "\"SKIP\"",
    "\"SOME\"",
    "\"START\"",
    "\"STORED\"",
    "\"STRING\"",
    "\"SUSPEND\"",
    "\"SWITCH\"",
    "\"SYNONYM\"",
    "\"SYSTEM\"",
    "\"TABLE\"",
    "\"TABLES\"",
    "\"TABLESAMPLE\"",
    "\"TABLESPACE\"",
    "\"TRIGGER\"",
    "\"THEN\"",
    "\"TEMP\"",
    "\"TEMPORARY\"",
    "<K_TIME_KEY_EXPR>",
    "\"TIMEOUT\"",
    "\"TRIM\"",
    "\"TO\"",
    "\"TOP\"",
    "\"TRAILING\"",
    "\"TRUNCATE\"",
    "\"TRUE\"",
    "\"TRY_CAST\"",
    "\"TUMBLING\"",
    "\"TYPE\"",
    "\"UNBOUNDED\"",
    "\"UNION\"",
    "\"UNIQUE\"",
    "\"UNLOGGED\"",
    "\"UNPIVOT\"",
    "\"UPDATE\"",
    "\"UPSERT\"",
    "\"UNQIESCE\"",
    "\"USE\"",
    "\"USER\"",
    "\"SQL_CALC_FOUND_ROWS\"",
    "\"SQL_NO_CACHE\"",
    "\"SQL_CACHE\"",
    "\"USING\"",
    "\"SIGNED\"",
    "<K_STRING_FUNCTION_NAME>",
    "\"UNSIGNED\"",
    "\"VALIDATE\"",
    "\"VALUE\"",
    "\"VALUES\"",
    "\"VARYING\"",
    "\"VERBOSE\"",
    "\"VIEW\"",
    "\"CONCURRENTLY\"",
    "\"WAIT\"",
    "\"WHEN\"",
    "\"WHERE\"",
    "\"WINDOW\"",
    "\"WITH\"",
    "\"WITH TIES\"",
    "\"WITHIN\"",
    "\"WITHOUT\"",
    "\"WITHOUT_ARRAY_WRAPPER\"",
    "\"WORK\"",
    "\"XML\"",
    "\"XOR\"",
    "\"XMLSERIALIZE\"",
    "\"XMLAGG\"",
    "\"XMLDATA\"",
    "\"XMLSCHEMA\"",
    "\"XMLTEXT\"",
    "\"XSINIL\"",
    "\"YAML\"",
    "\"YES\"",
    "\"ZONE\"",
    "<ST_SEMICOLON>",
    "<OP_GREATERTHANEQUALS>",
    "<OP_MINORTHANEQUALS>",
    "<OP_NOTEQUALSSTANDARD>",
    "<OP_NOTEQUALSBANG>",
    "<OP_CONCAT>",
    "\"&&\"",
    "\"&>\"",
    "\"<&\"",
    "<DT_ZONE>",
    "<S_DOUBLE>",
    "<S_LONG>",
    "<DIGIT>",
    "<S_HEX>",
    "<HEX_VALUE>",
    "<LINE_COMMENT>",
    "<MULTI_LINE_COMMENT>",
    "<S_IDENTIFIER>",
    "<LETTER>",
    "<PART_LETTER>",
    "<UnicodeIdentifierStart>",
    "<Ll>",
    "<Lm>",
    "<Lo>",
    "<Lt>",
    "<Lu>",
    "<Nl>",
    "<UnicodeIdentifierExtend>",
    "<Cf>",
    "<Mc>",
    "<Mn>",
    "<Nd>",
    "<Pc>",
    "<CJK>",
    "\"\\\\\\\'\"",
    "<ESC>",
    "<S_CHAR_LITERAL>",
    "<S_QUOTED_IDENTIFIER>",
    "\"(\"",
    "\")\"",
    "\"=\"",
    "\".\"",
    "\":\"",
    "\"CS\"",
    "\"RR\"",
    "\"RS\"",
    "\"TIMESTAMPTZ\"",
    "\"UR\"",
    "\"*\"",
    "\"?\"",
    "\"!\"",
    "\"+\"",
    "\">\"",
    "\"<\"",
    "\"*=\"",
    "\"=*\"",
    "\"@@\"",
    "\"~\"",
    "\"~*\"",
    "\"!~\"",
    "\"!~*\"",
    "\"@>\"",
    "\"<@\"",
    "\"?|\"",
    "\"?&\"",
    "\"-\"",
    "\"-#\"",
    "\"<->\"",
    "\"<#>\"",
    "\":=\"",
    "\"|\"",
    "\"&\"",
    "\"<<\"",
    "\">>\"",
    "\"/\"",
    "\"%\"",
    "\"^\"",
    "\"[\"",
    "\"]\"",
    "\"{d\"",
    "\"}\"",
    "\"{t\"",
    "\"{ts\"",
    "\"::\"",
    "\"->\"",
    "\"->>\"",
    "\"#>\"",
    "\"#>>\"",
    "\"@\"",
    "\"IN NATURAL LANGUAGE MODE\"",
    "\"IN NATURAL LANGUAGE MODE WITH QUERY EXPANSION\"",
    "\"IN BOOLEAN MODE\"",
    "\"WITH QUERY EXPANSION\"",
    "\"{\"",
    "\"DISTRIBUTED RECOVERY\"",
    "\"RESTRICTED SESSION\"",
    "\"KILL SESSION\"",
  };

}
